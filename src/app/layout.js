
import { NextIntlClientProvider } from 'next-intl';
import { getLocale, getMessages } from 'next-intl/server';
import localFont from "next/font/local";
import "./globals.css";
import LocaleSwitcher from '@/components/LocaleSwitcher';
// import { useRouter } from 'next/navigation'
import loadMessages from '@/utils/loadMessages';

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata = {
  title: "Next Intl App",
  description: "Generated by next intl app",
};

export default async function RootLayout({ children }) {
  const locale = await getLocale();
  // const { locale } = useRouter();

  // Providing all messages to the client side
  // const messages = await getMessages();
  // Convert messages to a plain object if needed
  // You may need to serialize or filter out non-serializable values
  // const serializedMessages = JSON.parse(JSON.stringify(messages)); // Ensure it is a plain object
  // Load the global messages (root) and merge them with page-specific messages
  const messages = loadMessages(locale);  // Default to 'app' folder's messages

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* <NextIntlClientProvider messages={serializedMessages}> */}
        <NextIntlClientProvider messages={messages} locale={locale}>
          <main className="container mx-auto">
            <LocaleSwitcher />
            {children}
          </main>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
